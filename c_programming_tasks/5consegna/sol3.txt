#include <stdio.h>
#include <stdlib.h>
#define max 100
//202 per contenere tutte le somme nel caso di una matrice 100x100 (il mio massimo impostato)
#define mass 202  

int main ()
{
    int matrice[max][max], i, j, somma, vettore[mass], N, M;     

    //inizializzo il vettore a 0
    for (i = 0; i < mass; i++) {
        vettore[i] = 0; 
    }

    printf("Quante righe vuoi inserire nella tua matrice? (max 100) \n");
    scanf("%d", &N);
    
    //controllo che le righe inserite siano nell'intervallo definito
    while (N > 100 && N < 0) {
        printf("Inserisci un numero di righe possibile (max 100): \n");
        scanf("%d", &N);
    }

    printf("Quante colonne vuoi inserire nella tua matrice? (max 100) \n");
    scanf("%d", &M);

    //controllo che le colonne inserite siano nell'intervallo definito
    while (M > 100 && M < 0) {
        printf("Inserisci un numero di righe possibile (max 100): \n");
        scanf("%d", &M);
    }

    //se righe e colonne sono diverse esco direttamente perchè la matrice sicuramente non è magica
    if (N != M) {   
        printf("Righe e colonne non sono equivalenti. La matrice non puo\' essere magica \n");
        system("pause");
        return 0;
    }

    printf("Carica la tua matrice e scopri se e\' magica \n\n"); 
    
    //imposto due cicli annidati per consentire l'inserimento della matrica all'utente
    for(i = 0; i < N; i++) 
        for(j = 0; j < M; j++) { 
            printf("Inserisci il valore di riga %d e colonna %d:", i, j); 
            scanf("%d", &matrice[i][j]);
        }
    
    //stampo la matrice inserita
    printf("La tua matrice e\': \n"); 
        for(i = 0; i < N; i++) { 
            printf("\n"); 
            for(j = 0; j < M; j++) 
            printf("%5d", matrice[i][j]); 
        }
    printf("\n");

    //controllo se la matrice è magica



    somma = 0;                                                                  
    //somma delle righe                  
    for(i = 0; i < N; i++) {
        for(j = 0; j < M; j++) {
            somma = somma + matrice[i][j];            
        }
        //inserisco la somma ottenuta per la riga nel vettore
        vettore[i] = somma; 

        //inizializzo di nuovo somma a 0 per la riga successiva
        somma = 0;
    }
    
    //somma delle colonne
    for(j = 0; j < M; j++) {
        for(i = 0; i < N; i++) {
            somma = somma + matrice[i][j];            
        }
        vettore[j+N] = somma; //sommo a j il numero N equivalente agli indici del vettore già occupati dalla precedente implementazione

        somma = 0;
    }

    somma = 0;
    //somma della diagonale principale
     for(i = 0; i < N; i++) {                                                     
        somma = somma + matrice[i][i];        
    }
    vettore[N+M] = somma;

    somma = 0;
    //somma della diagonale secondaria 
    for(i = 0; i < N; i++) {                
        somma = somma + matrice[i][N-i-1];
    }
    vettore[N+M+1] = somma;

    printf("\n\n");

    //scorro il vettore per confrontare le somme        
    for (i = 0; i < N+M+1; i++) {
        if (vettore[i] != vettore[i+1]) {
            printf("\n\nLa matrice non e\' magica \n");
            system ("pause");
            return 0;
        }
    }

    printf("La matrice e\' magica. \nLa somma di righe, colonne e diagonalie\' %d", vettore[0]);

    system ("pause");
    return 0;
}